{"version":3,"sources":["/Users/mromano/dev/cryptowallet/src/$_lazy_route_resource lazy","/Users/mromano/dev/cryptowallet/src/app/add-crypto-dialog/add-crypto-dialog.component.html","/Users/mromano/dev/cryptowallet/src/app/add-crypto-dialog/add-crypto-dialog.component.ts","/Users/mromano/dev/cryptowallet/src/app/app-routing.module.ts","/Users/mromano/dev/cryptowallet/src/app/app.component.css","/Users/mromano/dev/cryptowallet/src/app/app.component.html","/Users/mromano/dev/cryptowallet/src/app/app.component.ts","/Users/mromano/dev/cryptowallet/src/app/app.module.ts","/Users/mromano/dev/cryptowallet/src/app/coinmarketcap.service.ts","/Users/mromano/dev/cryptowallet/src/app/log.pipe.ts","/Users/mromano/dev/cryptowallet/src/app/market-cap/market-cap.component.css","/Users/mromano/dev/cryptowallet/src/app/market-cap/market-cap.component.html","/Users/mromano/dev/cryptowallet/src/app/market-cap/market-cap.component.ts","/Users/mromano/dev/cryptowallet/src/app/wallet/wallet.component.css","/Users/mromano/dev/cryptowallet/src/app/wallet/wallet.component.html","/Users/mromano/dev/cryptowallet/src/app/wallet/wallet.component.ts","/Users/mromano/dev/cryptowallet/src/environments/environment.ts","/Users/mromano/dev/cryptowallet/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mromano/dev/cryptowallet/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div>test</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mromano/dev/cryptowallet/src/app/add-crypto-dialog/add-crypto-dialog.component.html\n// module id = ../../../../../src/app/add-crypto-dialog/add-crypto-dialog.component.html\n// module chunks = main","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'add-crypto-dialog',\n  templateUrl: 'add-crypto-dialog.component.html',\n})\nexport class AddCryptoDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<AddCryptoDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mromano/dev/cryptowallet/src/app/add-crypto-dialog/add-crypto-dialog.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MarketCapComponent } from './market-cap/market-cap.component';\nimport { WalletComponent } from './wallet/wallet.component';\n\nconst routes: Routes = [\n  {\n    path: 'market',\n    component: MarketCapComponent,\n  },\n  {\n    path: 'wallet',\n    component: WalletComponent,\n  },\n  {\n    path: '',\n    component: MarketCapComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/mromano/dev/cryptowallet/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".app-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n\\n.app-is-mobile .app-toolbar {\\n  position: fixed;\\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\n  z-index: 2;\\n}\\n\\nh1.app-name {\\n  margin-left: 8px;\\n}\\n\\n.mat-sidenav {\\n  background-color: #efefefe0;\\n}\\n\\n.item-side i {\\n  font-size: 40px;\\n}\\n\\n.mat-list-item {\\n  height: 70px !important;\\n}\\n\\n.app-sidenav-container {\\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\n     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n\\n.app-is-mobile .app-sidenav-container {\\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\n     `<body>` to be our scrolling element for mobile layouts. */\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 0 auto;\\n          flex: 1 0 auto;\\n}\\n\\n.item-side {\\n  text-align: center;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mromano/dev/cryptowallet/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"app-container\\\" [class.app-is-mobile]=\\\"mobileQuery.matches\\\">\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"app-toolbar\\\">\\n    <button mat-icon-button (click)=\\\"snav.toggle()\\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n    <h1 class=\\\"app-name\\\">Crypto Wallet</h1>\\n  </mat-toolbar>\\n\\n  <mat-sidenav-container class=\\\"app-sidenav-container\\\"\\n                         [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\">\\n    <mat-sidenav #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\"\\n                 [opened]=\\\"true\\\"\\n                 [fixedInViewport]=\\\"mobileQuery.matches\\\" fixedTopGap=\\\"56\\\">\\n      <mat-nav-list>\\n        <a mat-list-item routerLink=\\\"market\\\">\\n          <div class=\\\"item-side\\\">\\n              <div><i class=\\\"material-icons\\\">timeline</i></div>\\n              <div>Market</div>\\n          </div>\\n        </a>\\n        <a mat-list-item routerLink=\\\"wallet\\\">\\n          <div class=\\\"item-side\\\">\\n            <div><i class=\\\"material-icons\\\">account_balance_wallet</i></div>\\n            <div>Wallet</div>\\n          </div>\\n        </a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n\\n    <mat-sidenav-content>\\n      <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mromano/dev/cryptowallet/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { ChangeDetectorRef, Component } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mromano/dev/cryptowallet/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { CoinmarketcapService } from './coinmarketcap.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport {\n  MatAutocompleteModule, MatButtonToggleModule, MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatExpansionModule,\n  MatFormFieldModule, MatGridListModule, MatIconModule, MatMenuModule, MatNativeDateModule,\n  MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule, MatRadioModule, MatRippleModule, MatSelectModule, MatSidenav,\n  MatSliderModule,\n  MatSlideToggleModule, MatSnackBarModule, MatStepperModule, MatTabsModule, MatTooltipModule\n} from '@angular/material';\nimport { MatInputModule } from '@angular/material';\nimport { LogPipe } from './log.pipe';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AddCryptoDialogComponent } from './add-crypto-dialog/add-crypto-dialog.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MarketCapComponent } from './market-cap/market-cap.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { WalletComponent } from './wallet/wallet.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddCryptoDialogComponent,\n    LogPipe,\n    MarketCapComponent,\n    WalletComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    AppRoutingModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatStepperModule\n\n  ],\n  entryComponents: [\n    AddCryptoDialogComponent\n  ],\n  providers: [CoinmarketcapService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mromano/dev/cryptowallet/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class CoinmarketcapService {\n\n  BASE_URL = 'https://api.coinmarketcap.com/v1';\n\n  constructor(private http: HttpClient) {\n  }\n\n  public ticker(start: number): Observable<any> {\n\n    return this.http.get(this.BASE_URL + '/ticker/?start=' + start + '&limit=100',\n      {\n        headers: new HttpHeaders()\n          .append('Accept', 'application/json')\n      }\n    );\n\n    // return this.http.get('/assets/test.json',\n    //   {\n    //     headers: new HttpHeaders()\n    //       .append('Accept', 'application/json')\n    //   }\n    // );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mromano/dev/cryptowallet/src/app/coinmarketcap.service.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'log'\n})\nexport class LogPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    console.log(value)\n    return value;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mromano/dev/cryptowallet/src/app/log.pipe.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".red {\\n  color: red;\\n}\\n\\n.green {\\n  color: green;\\n}\\n\\n.title {\\n  text-align: center;\\n}\\n\\n.container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 420px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 420px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mromano/dev/cryptowallet/src/app/market-cap/market-cap.component.css\n// module id = ../../../../../src/app/market-cap/market-cap.component.css\n// module chunks = main","module.exports = \"<div class=\\\"title\\\">\\n  <h1>Cryptocurrency Market Capitalizations</h1>\\n</div>\\n\\n<div class=\\\"header\\\">\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n</div>\\n<div>\\n  <div class=\\\"container mat-elevation-z8\\\" *ngIf=\\\"dataSource\\\">\\n\\n    <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"rank\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Rank </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.rank}} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> <i class=\\\"cc {{row.symbol}}\\\"></i> {{row.name}} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"market_cap_usd\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Market Cap </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.market_cap_usd | currency:'USD':'symbol':'4.0-2' }} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"price_usd\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Price $ </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.price_usd | currency:'USD':'symbol':'0.0-7' }} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"volume_usd\\\">\\n        <mat-header-cell *matHeaderCellDef > 24h Volume </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\">\\n          {{row.volume_usd | currency:'USD':'symbol':'4.0-2' }}\\n        </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"available_supply\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Available Supply </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" > {{row.available_supply | number:'3.0-5'}} {{row.symbol}} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"percent_change_1h\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Change 1h </mat-header-cell>\\n        <mat-cell [ngClass]=\\\"cssClassPercentage(row.percent_change_1h)\\\" *matCellDef=\\\"let row\\\" [style.color]=\\\"row.percent_change_1h\\\" >\\n          {{row.percent_change_1h}}% </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"percent_change_24h\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Change 24h </mat-header-cell>\\n        <mat-cell [ngClass]=\\\"cssClassPercentage(row.percent_change_24h)\\\" *matCellDef=\\\"let row\\\" [style.color]=\\\"row.percent_change_24h\\\">\\n          {{row.percent_change_24h}}% </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"percent_change_7d\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Change 7d </mat-header-cell>\\n        <mat-cell [ngClass]=\\\"cssClassPercentage(row.percent_change_7d)\\\" *matCellDef=\\\"let row\\\" [style.color]=\\\"row.percent_change_7d\\\" >\\n          {{row.percent_change_7d}}%\\n        </mat-cell>\\n      </ng-container>\\n\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </mat-row>\\n    </mat-table>\\n\\n    <mat-paginator [pageSize]=\\\"100\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" length=\\\"2000\\\" (page)=\\\"pageEvent($event)\\\"></mat-paginator>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mromano/dev/cryptowallet/src/app/market-cap/market-cap.component.html\n// module id = ../../../../../src/app/market-cap/market-cap.component.html\n// module chunks = main","import { Component, ViewChild } from '@angular/core';\nimport { CoinmarketcapService } from './../coinmarketcap.service';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'app-market-cap',\n  templateUrl: './market-cap.component.html',\n  styleUrls: ['./market-cap.component.css']\n})\nexport class MarketCapComponent {\n\n\n  displayedColumns = [\n    'rank',\n    'name',\n    'market_cap_usd',\n    'price_usd',\n    'volume_usd',\n    'available_supply',\n    'percent_change_1h',\n    'percent_change_24h',\n    'percent_change_7d'\n  ];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  dataSource;\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  constructor(private coinmarketcapService: CoinmarketcapService) {\n    coinmarketcapService.ticker(0).subscribe(res => {\n      res = this.RemoveTheNumberFromAPropertyNameThatStartWithANumberBecauseABugInAngularMaterial(res);\n      this.dataSource = new MatTableDataSource(res);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  public pageEvent(event) {\n    console.log(event);\n    this.coinmarketcapService.ticker(100 * event.pageIndex).subscribe(res => {\n      res = this.RemoveTheNumberFromAPropertyNameThatStartWithANumberBecauseABugInAngularMaterial(res);\n      this.dataSource = new MatTableDataSource(res);\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  public cssClassPercentage(value: any) {\n    if (value >= 0) {\n      return 'green';\n    } else {\n      return 'red';\n    }\n  }\n\n  private RemoveTheNumberFromAPropertyNameThatStartWithANumberBecauseABugInAngularMaterial(res) {\n    const jsonString = JSON.stringify(res).replace(/24h_volume_usd/g, \"volume_usd\");\n    res = JSON.parse(jsonString);\n    return res;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mromano/dev/cryptowallet/src/app/market-cap/market-cap.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".title {\\n  text-align: center;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mromano/dev/cryptowallet/src/app/wallet/wallet.component.css\n// module id = ../../../../../src/app/wallet/wallet.component.css\n// module chunks = main","module.exports = \"<div class=\\\"title\\\">\\n  <h1>Wallet</h1>\\n</div>\\n<div class=\\\"button-row\\\">\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\">Add</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mromano/dev/cryptowallet/src/app/wallet/wallet.component.html\n// module id = ../../../../../src/app/wallet/wallet.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AddCryptoDialogComponent } from '../add-crypto-dialog/add-crypto-dialog.component';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.css']\n})\nexport class WalletComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n  }\n\n  public openDialog() {\n\n    const dialogRef = this.dialog.open(AddCryptoDialogComponent, {\n      width: '250px',\n      height: '250px',\n      data: {test: 'test'}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mromano/dev/cryptowallet/src/app/wallet/wallet.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/mromano/dev/cryptowallet/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/mromano/dev/cryptowallet/src/main.ts"],"sourceRoot":"webpack:///"}